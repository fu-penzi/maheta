# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest
    env:
        RELEASE_KEYSTORE: ${{ secrets.RELEASE_KEYSTORE }}
        KEYSTOREPASS: ${{ secrets.KEYSTOREPASS }}
        KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
        KEYSTORE_ALIAS_PASS: ${{ secrets.KEYSTORE_ALIAS_PASS }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        APK_PATH: ${{ github.workspace }}/android/app/build/outputs/apk/release
        VERSION: 1.0.10
    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Setup Android Build Tools
   #   run: sudo apt -y install android-sdk-build-tools
      run: sudo apt -y update && sudo apt -y install android-sdk
    - run: export PATH=${PATH}:$ANDROID_HOME/platform-tools:$ANDROID_HOME/tools:$ANDROID_HOME/build-tools/34.0.0
 #   - name: Setup Android SDK
#      uses: android-actions/setup-android@v3
#    - run: sdkmanager --install "build-tools;34.0.0"
#    - run: sdkmanager --update
    - name: Prepare
      run: |
        chmod +x ./android/gradlew
        echo "$RELEASE_KEYSTORE" | base64 --decode > ${{ github.workspace }}/keystore-decoded.jks
        echo "SHORT_SHA=`echo ${{ github.sha }} | cut -c1-7`" >> $GITHUB_ENV
   
    - name: Build app
      run: |
        npm ci
        npm run update-android:prod

    - name: Build APK
      run: |
        npx cap build android --keystorepath "${{ github.workspace }}/keystore-decoded.jks" --keystorepass "$KEYSTOREPASS" --keystorealias "$KEYSTORE_ALIAS" --keystorealiaspass "$KEYSTORE_ALIAS_PASS" --androidreleasetype APK
        rm "${{ env.APK_PATH }}/app-release-signed.apk"
       # mv "${{ env.APK_PATH }}/app-release-signed.apk" "${{ env.APK_PATH }}/Maheta_v${{ env.VERSION }}_${{ env.SHORT_SHA }}.apk"
      
    - uses: r0adkll/sign-android-release@v1
      name: Sign app APK
    # ID used to access action output
      id: sign_app
      with:
       releaseDirectory: ${{ env.APK_PATH }}
       signingKeyBase64: ${{ secrets.RELEASE_KEYSTORE }}
       alias: ${{ secrets.KEYSTORE_ALIAS }}
       keyStorePassword: ${{ secrets.KEYSTOREPASS }}
       keyPassword: ${{ secrets.KEYSTORE_ALIAS_PASS }}
      env:
      # override default build-tools version (33.0.0) -- optional
       BUILD_TOOLS_VERSION: "34.0.0"
      
    - name: Delete Release
      uses: larryjoelane/delete-release-action@v1.0.24
      with:
        release-name: Latest
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Release with Notes
      uses: softprops/action-gh-release@v2
      with:
          #files: ${{ env.APK_PATH }}/Maheta_v${{ env.VERSION }}_${{ env.SHORT_SHA }}.apk 
          files: ${{steps.sign_app.outputs.signedReleaseFile}}
          make_latest: true
          tag_name: Latest
